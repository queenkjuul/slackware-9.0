#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-pciutils

VERSION=2.1.11
ARCH=i386
BUILD=4

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_pciutils.tar.gz

cd $TMP
tar xjvf $CWD/pciutils-$VERSION.tar.bz2
cd pciutils-$VERSION
chown -R root.root .
zcat $CWD/pcimodules-pciutils-$VERSION.diff.gz | patch -p1 --verbose
# Fixes memory allocation and strcpy bugs that cause pcimodules
# to hang on systems using libsafe:
zcat $CWD/pcimodules.overflow.diff.gz | patch -p1 --verbose
# Change prefix from /usr/local to /usr:
zcat $CWD/pciutils.prefix.diff.gz | patch -p1 --verbose
# Fetch the latest pci.ids:
rm -f pci.ids
wget http://pciids.sourceforge.net/pci.ids
make
strip lspci setpci pcimodules
cat lspci > $PKG/sbin/lspci
cat setpci > $PKG/sbin/setpci
cat pcimodules > $PKG/sbin/pcimodules
chmod 755 $PKG/sbin/*
chown -R root.bin $PKG/sbin
cat pci.ids > $PKG/usr/share/pci.ids
mkdir -p $PKG/usr/include/pci
for file in config.h header.h pci.h ; do
  cp -a lib/$file $PKG/usr/include/pci
done
mkdir -p $PKG/usr/lib
cat lib/libpci.a > $PKG/usr/lib/libpci.a
gzip -9c lspci.8 > $PKG/usr/man/man8/lspci.8.gz
gzip -9c setpci.8 > $PKG/usr/man/man8/setpci.8.gz
gzip -9c pcimodules.8 > $PKG/usr/man/man8/pcimodules.8.gz
mkdir -p $PKG/usr/doc/pciutils-$VERSION
cp -a README ChangeLog TODO $PKG/usr/doc/pciutils-$VERSION
chmod 644 $PKG/usr/doc/pciutils-$VERSION/*
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Build the package:
cd $PKG
makepkg -l y -c n $TMP/pciutils-$VERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/pciutils-$VERSION
  rm -rf $PKG
fi
